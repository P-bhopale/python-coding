<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SuperStoreUS-2015' inline='true' name='federated.0rc881n11dn0vh171nnar1bkcml5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SuperStoreUS-2015' name='textscan.1micq9t0jspy6n192h2k90ehmasw'>
            <connection class='textscan' directory='C:/Users/HP/Documents/My Tableau Repository/Datasources' filename='SuperStoreUS-2015.xlsx' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1micq9t0jspy6n192h2k90ehmasw' name='SuperStoreUS-2015.xlsx' table='[SuperStoreUS-2015.xlsx]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='PK__________!_§•ù™„_________Ý_(Content_Types).xml ¢Ù_( ________________________________________________________________________' ordinal='0' />
            <column datatype='string' name='_Ûò__þ¾“PP©ÒH4_zI”Åo›g&apos;ãmYD__hœMÅ î‹_læ´±ËT¼Ï^z÷&quot;BRV«ÂYHÅ_PŒG×WÉlç_#^m1_9‘_³_J…±ó`ùËÂ…R_?†¥ô*(©%Èa¿&apos;3g_' ordinal='1' />
            <column datatype='string' name='õ¨Â_£ä__j)Pô¼å×{%scEô¸ÿ¯¢J…ò¾0™&quot;_*7Vÿ é¹ÅÂd )¶._:F_@iÌ_¨' ordinal='2' />
            <column datatype='string' name='b__3†)_±1_r”¼±é`4D__èU•Ì ·…$v_ûë f_DÔ`7_Êï„H»_°3Õ©ß=è¹!Þ__žgík€1¯¬g€¹ñØÂÐž){&amp;_.¬æÎ­.JÕ†¸TÆ_t7•€+4_Î£äÂu__U£5èžgH_dà˜Y_7_°ò^×' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
            <column datatype='string' name='F8' ordinal='7' />
            <column datatype='string' name='F9' ordinal='8' />
            <column datatype='string' name='F10' ordinal='9' />
            <column datatype='string' name='F11' ordinal='10' />
            <column datatype='string' name='F12' ordinal='11' />
            <column datatype='string' name='F13' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PK__________!_§•ù™„_________Ý_(Content_Types).xml ¢Ù_( ________________________________________________________________________</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PK__________!_§•ù™„_________Ý_(Content_Types).xml ¢Ù_( ________________________________________________________________________]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>PK__________!_§•ù™„_________Ý_(Content_Types).xml ¢Ù_( ________________________________________________________________________</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_Ûò__þ¾“PP©ÒH4_zI”Åo›g&apos;ãmYD__hœMÅ î‹_læ´±ËT¼Ï^z÷&quot;BRV«ÂYHÅ_PŒG×WÉlç_#^m1_9‘_³_J…±ó`ùËÂ…R_?†¥ô*(©%Èa¿&apos;3g_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[_Ûò__þ¾“PP©ÒH4_zI”Åo›g&apos;ãmYD__hœMÅ î‹_læ´±ËT¼Ï^z÷&quot;BRV«ÂYHÅ_PŒG×WÉlç_#^m1_9‘_³_J…±ó`ùËÂ…R_?†¥ô*(©%Èa¿&apos;3g_]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>_Ûò__þ¾“PP©ÒH4_zI”Åo›g&apos;ãmYD__hœMÅ î‹_læ´±ËT¼Ï^z÷&quot;BRV«ÂYHÅ_PŒG×WÉlç_#^m1_9‘_³_J…±ó`ùËÂ…R_?†¥ô*(©%Èa¿&apos;3g_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>õ¨Â_£ä__j)Pô¼å×{%scEô¸ÿ¯¢J…ò¾0™&quot;_*7Vÿ é¹ÅÂd )¶._:F_@iÌ_¨</remote-name>
            <remote-type>129</remote-type>
            <local-name>[õ¨Â_£ä__j)Pô¼å×{%scEô¸ÿ¯¢J…ò¾0™&quot;_*7Vÿ é¹ÅÂd )¶._:F_@iÌ_¨]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>õ¨Â_£ä__j)Pô¼å×{%scEô¸ÿ¯¢J…ò¾0™&quot;_*7Vÿ é¹ÅÂd )¶._:F_@iÌ_¨</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>b__3†)_±1_r”¼±é`4D__èU•Ì ·…$v_ûë f_DÔ`7_Êï„H»_°3Õ©ß=è¹!Þ__žgík€1¯¬g€¹ñØÂÐž){&amp;_.¬æÎ­.JÕ†¸TÆ_t7•€+4_Î£äÂu__U£5èžgH_dà˜Y_7_°ò^×</remote-name>
            <remote-type>129</remote-type>
            <local-name>[b__3†)_±1_r”¼±é`4D__èU•Ì ·…$v_ûë f_DÔ`7_Êï„H»_°3Õ©ß=è¹!Þ__žgík€1¯¬g€¹ñØÂÐž){&amp;_.¬æÎ­.JÕ†¸TÆ_t7•€+4_Î£äÂu__U£5èžgH_dà˜Y_7_°ò^×]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>b__3†)_±1_r”¼±é`4D__èU•Ì ·…$v_ûë f_DÔ`7_Êï„H»_°3Õ©ß=è¹!Þ__žgík€1¯¬g€¹ñØÂÐž){&amp;_.¬æÎ­.JÕ†¸TÆ_t7•€+4_Î£äÂu__U£5èžgH_dà˜Y_7_°ò^×</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F10</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F10]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>F10</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F12</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F12]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>F12</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F13</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F13]</local-name>
            <parent-name>[SuperStoreUS-2015.xlsx]</parent-name>
            <remote-alias>F13</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SuperStoreUS-2015.xlsx' datatype='table' name='[__tableau_internal_object_id__].[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/HP/AppData/Local/Temp/TableauTemp/#TableauTemp_11n7z6k1og6q3010136bq0z8gtty.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/04/2025 03:08:42 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>PK__________!_§•ù™„_________Ý_(Content_Types).xml ¢Ù_( ________________________________________________________________________</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PK__________!_§•ù™„_________Ý_(Content_Types).xml ¢Ù_( ________________________________________________________________________]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PK__________!_§•ù™„_________Ý_(Content_Types).xml ¢Ù_( ________________________________________________________________________</remote-alias>
              <ordinal>0</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1584</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>_Ûò__þ¾“PP©ÒH4_zI”Åo›g&apos;ãmYD__hœMÅ î‹_læ´±ËT¼Ï^z÷&quot;BRV«ÂYHÅ_PŒG×WÉlç_#^m1_9‘_³_J…±ó`ùËÂ…R_?†¥ô*(©%Èa¿&apos;3g_</remote-name>
              <remote-type>129</remote-type>
              <local-name>[_Ûò__þ¾“PP©ÒH4_zI”Åo›g&apos;ãmYD__hœMÅ î‹_læ´±ËT¼Ï^z÷&quot;BRV«ÂYHÅ_PŒG×WÉlç_#^m1_9‘_³_J…±ó`ùËÂ…R_?†¥ô*(©%Èa¿&apos;3g_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>_Ûò__þ¾“PP©ÒH4_zI”Åo›g&apos;ãmYD__hœMÅ î‹_læ´±ËT¼Ï^z÷&quot;BRV«ÂYHÅ_PŒG×WÉlç_#^m1_9‘_³_J…±ó`ùËÂ…R_?†¥ô*(©%Èa¿&apos;3g_</remote-alias>
              <ordinal>1</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>986</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>õ¨Â_£ä__j)Pô¼å×{%scEô¸ÿ¯¢J…ò¾0™&quot;_*7Vÿ é¹ÅÂd )¶._:F_@iÌ_¨</remote-name>
              <remote-type>129</remote-type>
              <local-name>[õ¨Â_£ä__j)Pô¼å×{%scEô¸ÿ¯¢J…ò¾0™&quot;_*7Vÿ é¹ÅÂd )¶._:F_@iÌ_¨]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>õ¨Â_£ä__j)Pô¼å×{%scEô¸ÿ¯¢J…ò¾0™&quot;_*7Vÿ é¹ÅÂd )¶._:F_@iÌ_¨</remote-alias>
              <ordinal>2</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>410</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>b__3†)_±1_r”¼±é`4D__èU•Ì ·…$v_ûë f_DÔ`7_Êï„H»_°3Õ©ß=è¹!Þ__žgík€1¯¬g€¹ñØÂÐž){&amp;_.¬æÎ­.JÕ†¸TÆ_t7•€+4_Î£äÂu__U£5èžgH_dà˜Y_7_°ò^×</remote-name>
              <remote-type>129</remote-type>
              <local-name>[b__3†)_±1_r”¼±é`4D__èU•Ì ·…$v_ûë f_DÔ`7_Êï„H»_°3Õ©ß=è¹!Þ__žgík€1¯¬g€¹ñØÂÐž){&amp;_.¬æÎ­.JÕ†¸TÆ_t7•€+4_Î£äÂu__U£5èžgH_dà˜Y_7_°ò^×]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>b__3†)_±1_r”¼±é`4D__èU•Ì ·…$v_ûë f_DÔ`7_Êï„H»_°3Õ©ß=è¹!Þ__žgík€1¯¬g€¹ñØÂÐž){&amp;_.¬æÎ­.JÕ†¸TÆ_t7•€+4_Î£äÂu__U£5èžgH_dà˜Y_7_°ò^×</remote-alias>
              <ordinal>3</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F5</remote-alias>
              <ordinal>4</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>115</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F6</remote-alias>
              <ordinal>5</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F7</remote-alias>
              <ordinal>6</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F8</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F8</remote-alias>
              <ordinal>7</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F9</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F9</remote-alias>
              <ordinal>8</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F10</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F10</remote-alias>
              <ordinal>9</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F11</remote-alias>
              <ordinal>10</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F12</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F12</remote-alias>
              <ordinal>11</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F13</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F13]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F13</remote-alias>
              <ordinal>12</ordinal>
              <family>SuperStoreUS-2015.xlsx</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='SuperStoreUS-2015.xlsx' id='SuperStoreUS-2015.xlsx_6AE02311A488400585846EE1D339548D'>
            <properties context=''>
              <relation connection='textscan.1micq9t0jspy6n192h2k90ehmasw' name='SuperStoreUS-2015.xlsx' table='[SuperStoreUS-2015.xlsx]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='PK__________!_§•ù™„_________Ý_(Content_Types).xml ¢Ù_( ________________________________________________________________________' ordinal='0' />
                  <column datatype='string' name='_Ûò__þ¾“PP©ÒH4_zI”Åo›g&apos;ãmYD__hœMÅ î‹_læ´±ËT¼Ï^z÷&quot;BRV«ÂYHÅ_PŒG×WÉlç_#^m1_9‘_³_J…±ó`ùËÂ…R_?†¥ô*(©%Èa¿&apos;3g_' ordinal='1' />
                  <column datatype='string' name='õ¨Â_£ä__j)Pô¼å×{%scEô¸ÿ¯¢J…ò¾0™&quot;_*7Vÿ é¹ÅÂd )¶._:F_@iÌ_¨' ordinal='2' />
                  <column datatype='string' name='b__3†)_±1_r”¼±é`4D__èU•Ì ·…$v_ûë f_DÔ`7_Êï„H»_°3Õ©ß=è¹!Þ__žgík€1¯¬g€¹ñØÂÐž){&amp;_.¬æÎ­.JÕ†¸TÆ_t7•€+4_Î£äÂu__U£5èžgH_dà˜Y_7_°ò^×' ordinal='3' />
                  <column datatype='string' name='F5' ordinal='4' />
                  <column datatype='string' name='F6' ordinal='5' />
                  <column datatype='string' name='F7' ordinal='6' />
                  <column datatype='string' name='F8' ordinal='7' />
                  <column datatype='string' name='F9' ordinal='8' />
                  <column datatype='string' name='F10' ordinal='9' />
                  <column datatype='string' name='F11' ordinal='10' />
                  <column datatype='string' name='F12' ordinal='11' />
                  <column datatype='string' name='F13' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Orders (SuperStoreUS-2015)' inline='true' name='federated.0wqssak01i63de1707otp1j0ddmo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SuperStoreUS-2015' name='excel-direct.1o7qnv503mpzgq1h0g9xk0o5uu2o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/Documents/My Tableau Repository/Datasources/SuperStoreUS-2015.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1o7qnv503mpzgq1h0g9xk0o5uu2o' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:Y1953:no:A1:Y1953:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order Priority' ordinal='1' />
            <column datatype='real' name='Discount' ordinal='2' />
            <column datatype='real' name='Unit Price' ordinal='3' />
            <column datatype='real' name='Shipping Cost' ordinal='4' />
            <column datatype='integer' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Ship Mode' ordinal='7' />
            <column datatype='string' name='Customer Segment' ordinal='8' />
            <column datatype='string' name='Product Category' ordinal='9' />
            <column datatype='string' name='Product Sub-Category' ordinal='10' />
            <column datatype='string' name='Product Container' ordinal='11' />
            <column datatype='string' name='Product Name' ordinal='12' />
            <column datatype='real' name='Product Base Margin' ordinal='13' />
            <column datatype='string' name='Country' ordinal='14' />
            <column datatype='string' name='Region' ordinal='15' />
            <column datatype='string' name='State or Province' ordinal='16' />
            <column datatype='string' name='City' ordinal='17' />
            <column datatype='integer' name='Postal Code' ordinal='18' />
            <column datatype='date' name='Order Date' ordinal='19' />
            <column datatype='date' name='Ship Date' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='integer' name='Quantity ordered new' ordinal='22' />
            <column datatype='real' name='Sales' ordinal='23' />
            <column datatype='integer' name='Order ID' ordinal='24' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y1953:no:A1:Y1953:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State or Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State or Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State or Province</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity ordered new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity ordered new]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity ordered new</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Product Container]' role='dimension' type='nominal' />
      <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_BA428553F7544C04A891E0C832EA9340]' role='measure' type='quantitative' />
      <column-instance column='[Product Container]' derivation='None' name='[none:Product Container:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country,State or Province)' hidden='true' name='[Action (Country,State or Province)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State or Province]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Category,Product Sub-Category)' hidden='true' name='[Action (Product Category,Product Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Category]' />
          <groupfilter function='level-members' level='[Product Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (State or Province)' hidden='true' name='[Action (State or Province)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State or Province]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/HP/AppData/Local/Temp/TableauTemp/#TableauTemp_1r39tqc1kh3ufb16vbh4e1qzpjb9.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/04/2025 04:35:00 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1952</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Priority</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Priority]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Priority</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unit Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unit Price</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>541</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shipping Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping Cost</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>472</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>987</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>987</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Segment</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Category</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Sub-Category</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Container</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Container]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Container</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>821</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Base Margin</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Product Base Margin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Base Margin</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State or Province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State or Province]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State or Province</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>791</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>884</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>182</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>190</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1621</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity ordered new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity ordered new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity ordered new</remote-alias>
              <ordinal>22</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>23</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1753</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>24</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1125</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_BA428553F7544C04A891E0C832EA9340]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0wqssak01i63de1707otp1j0ddmo]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product Container:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Jumbo Box&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Small Box&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Medium Box&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wrap Bag&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Large Box&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Small Pack&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jumbo Drum&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_BA428553F7544C04A891E0C832EA9340'>
            <properties context=''>
              <relation connection='excel-direct.1o7qnv503mpzgq1h0g9xk0o5uu2o' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:Y1953:no:A1:Y1953:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order Priority' ordinal='1' />
                  <column datatype='real' name='Discount' ordinal='2' />
                  <column datatype='real' name='Unit Price' ordinal='3' />
                  <column datatype='real' name='Shipping Cost' ordinal='4' />
                  <column datatype='integer' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Ship Mode' ordinal='7' />
                  <column datatype='string' name='Customer Segment' ordinal='8' />
                  <column datatype='string' name='Product Category' ordinal='9' />
                  <column datatype='string' name='Product Sub-Category' ordinal='10' />
                  <column datatype='string' name='Product Container' ordinal='11' />
                  <column datatype='string' name='Product Name' ordinal='12' />
                  <column datatype='real' name='Product Base Margin' ordinal='13' />
                  <column datatype='string' name='Country' ordinal='14' />
                  <column datatype='string' name='Region' ordinal='15' />
                  <column datatype='string' name='State or Province' ordinal='16' />
                  <column datatype='string' name='City' ordinal='17' />
                  <column datatype='integer' name='Postal Code' ordinal='18' />
                  <column datatype='date' name='Order Date' ordinal='19' />
                  <column datatype='date' name='Ship Date' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='integer' name='Quantity ordered new' ordinal='22' />
                  <column datatype='real' name='Sales' ordinal='23' />
                  <column datatype='integer' name='Order ID' ordinal='24' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action2_A833DEFF40A843EC92A18705570B3B10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final dashboard' type='sheet' worksheet='Profit By State2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_A1C055A9EA914774BBF4EA7176106FBE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final dashboard' type='sheet' worksheet='Sales By Category and Subcategory' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_8F20F52BBCC5454D9029C8E8061E79F5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final dashboard' type='sheet' worksheet='Profit By Category and Subcategory' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4_9DDCD0C54A1D47AA8EA4C021BF0D92D5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final Dashboard Sample_Superstore' type='sheet' worksheet='Sales By Category and Subcategory' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final Dashboard Sample_Superstore' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_6ED65A83E09E46F3A81B0D7C70A5BB76]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final Dashboard Sample_Superstore' type='sheet' worksheet='Profit By Category and Subcategory' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final Dashboard Sample_Superstore' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_22FC6AFF4E7143209EAC2C841DCC1DE8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final Dashboard Sample_Superstore' type='sheet' worksheet='Profit By State2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final Dashboard Sample_Superstore' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action7_76E8E1F35D0B4B75A0B45BE5C7059B1C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final Dashboard Sample_Superstore' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Product Container' />
        <param name='target' value='Final Dashboard Sample_Superstore' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Profit By Category and Subcategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Profit By Category and Subcategory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (SuperStoreUS-2015)' name='federated.0wqssak01i63de1707otp1j0ddmo' />
          </datasources>
          <datasource-dependencies datasource='federated.0wqssak01i63de1707otp1j0ddmo'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Country,State or Province)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A833DEFF40A843EC92A18705570B3B10]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State or Province]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Product Category,Product Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_9DDCD0C54A1D47AA8EA4C021BF0D92D5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Category]' />
              <groupfilter function='level-members' level='[Product Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[Action (State or Province)]'>
            <groupfilter function='level-members' level='[State or Province]' user:ui-action-filter='[Action1_5CECC2A058684AF2BD9B4094B8AB88FB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]'>
            <groupfilter function='level-members' level='[none:Product Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Product Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[Action (State or Province)]</column>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Country,State or Province)]</column>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]</column>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Sub-Category:nk]</column>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Product Category,Product Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='742' />
                <format attr='maxwidth' value='742' />
                <format attr='minheight' value='340' />
                <format attr='maxheight' value='340' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk] / [federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Sub-Category:nk])</rows>
        <cols>[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{A037153D-1B9F-49A7-AA13-A85E09D964E5}' />
    </worksheet>
    <worksheet name='Profit By Product Container'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Profit By Product Container</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (SuperStoreUS-2015)' name='federated.0wqssak01i63de1707otp1j0ddmo' />
          </datasources>
          <datasource-dependencies datasource='federated.0wqssak01i63de1707otp1j0ddmo'>
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Container]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Product Container]' derivation='None' name='[none:Product Container:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Product Category,Product Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_9DDCD0C54A1D47AA8EA4C021BF0D92D5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Category]' />
              <groupfilter function='level-members' level='[Product Sub-Category]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Product Category,Product Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Container:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]</rows>
        <cols>([federated.0wqssak01i63de1707otp1j0ddmo].[none:Region:nk] / [federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Container:nk])</cols>
      </table>
      <simple-id uuid='{FCDB2AB0-CD07-4A60-8110-36ABA4BC03BA}' />
    </worksheet>
    <worksheet name='Profit By State'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Profit By State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (SuperStoreUS-2015)' name='federated.0wqssak01i63de1707otp1j0ddmo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wqssak01i63de1707otp1j0ddmo'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Country,State or Province)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A833DEFF40A843EC92A18705570B3B10]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State or Province]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[none:City:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Aberdeen&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Abilene&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Addison&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Adrian&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Agawam&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Alamogordo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Albemarle&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Albuquerque&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Alexandria&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Allen Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Allentown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Altamonte Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Alton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Altoona&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Altus&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Amarillo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Anacortes&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Anderson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Annandale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Annapolis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ansonia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Apex&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Apple Valley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Appleton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Arlington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Arlington Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Arvada&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Asheboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Asheville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Atascadero&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Athens&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Atlanta&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Auburn&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Augusta&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Aurora&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Austintown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bakersfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Baldwin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bangor&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Barrington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bartlesville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bartlett&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Batavia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Baton Rouge&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Battle Creek&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bay City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bayonne&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bedford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Belchertown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Belle Glade&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Belleville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bellingham&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bennington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Berkeley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bethlehem&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bethpage&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bettendorf&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Beverly&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Beverly Hills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Biddeford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Biloxi&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Birmingham&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Blacksburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bloomfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bloomington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Boardman&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Boca Raton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Boise&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bolingbrook&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bossier City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Boston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bowie&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bowling Green&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bozeman&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Brandon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Branford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Brentwood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bristol&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Brooklyn Center&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Brooklyn Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Broomfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bryan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bryant&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Buffalo Grove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Bullhead City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Burbank&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Burke&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Burleson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Burlington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Burnsville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Butte&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cabot&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Caldwell&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Calexico&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Calumet City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Camarillo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cambridge&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Camp Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Canton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carbondale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carlsbad&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carmel&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carol City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carol Stream&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carpentersville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carrollton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Carson City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cary&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Casselberry&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Catonsville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cedar Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cedar Hill&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cedar Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cedar Rapids&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Central Islip&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chambersburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chandler&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Channelview&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Charleston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Charlotte&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Charlottesville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chattanooga&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cheektowaga&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chesapeake&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cheshire&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cheyenne&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chicago&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chico&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cincinnati&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Clarksville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Clayton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Clearfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cleveland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cleveland Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Clifton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Clinton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cloverleaf&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Clovis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coachella&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coconut Creek&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coeur D Alene&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;College Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;College Station&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Collierville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Colorado Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Columbia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Columbus&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Commack&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Commerce City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Concord&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Conroe&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coon Rapids&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coos Bay&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coral Gables&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coral Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coram&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Corsicana&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Corvallis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Costa Mesa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Council Bluffs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Covington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cranford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cranston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Creve Coeur&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Crofton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Crown Point&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cumberland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Cuyahoga Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dallas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dalton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Danbury&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Danville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Davis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dayton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dearborn&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dearborn Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Decatur&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Deer Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Denton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Depew&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Derby&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Des Moines&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Des Plaines&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Detroit&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dickinson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dix Hills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dover&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Downers Grove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Draper&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Drexel Hill&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dublin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dubuque&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Duluth&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dundalk&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dunedin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dunwoody&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Durango&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Eagle&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Eagle Pass&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;East Chicago&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;East Lansing&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;East Los Angeles&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;East Massapequa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;East Point&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Eastpointe&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Eau Claire&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Eden&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Edgewood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Edina&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Edinburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Edmonds&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;El Centro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;El Dorado Hills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;El Mirage&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;El Paso&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Elgin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Elizabeth&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ellicott City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Elmira&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Elmwood Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Elyria&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Emporia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Encinitas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Englewood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Enid&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Enterprise&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Euclid&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Euless&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Eureka&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Everett&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fairborn&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fairfax&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fairfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fairmont&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Farmers Branch&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Farmington Hills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Farragut&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fayetteville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fitchburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Flagstaff&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Flint&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Florence&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Flower Mound&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fords&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Forest Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Collins&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Dodge&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Lauderdale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Lee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Myers&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Thomas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Wayne&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fountain&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Frankfort&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Franklin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Franklin Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Franklin Square&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Freeport&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fresno&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fridley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Friendswood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Fruit Cove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gainesville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gaithersburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Galesburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gallatin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Garden City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Garfield Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Garland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Garner&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gary&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gastonia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Georgetown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Germantown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gilbert&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gilroy&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gladstone&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Glen Cove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Glendale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Goffstown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Goldsboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Goleta&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gorham&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grand Forks&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grand Island&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grand Junction&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grand Prairie&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grand Rapids&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Granger&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Granite Bay&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grants Pass&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Green Bay&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Greeneville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Greenfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Greensburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Greenville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Greer&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gresham&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Grove City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gulfport&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hacienda Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hackensack&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hagerstown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hamilton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hammond&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hanover&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hanover Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hanson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Harker Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Harlingen&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Harrisburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Harrison&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Harrisonburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hattiesburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hawthorne&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hays&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hazelwood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Helena&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hempstead&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Henderson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hendersonville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Herndon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hesperia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hialeah&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hickory&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;High Point&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Highland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Highland Village&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Highlands Ranch&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hilliard&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hilton Head Island&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hobbs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Holladay&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Holland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hollywood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hoover&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hopkins&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hopkinton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Horn Lake&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hot Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Houston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hudson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Huntington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Huntington Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Huntsville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hurst&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hutchinson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Idaho Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Immokalee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Independence&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Indian Trail&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Indianapolis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Inkster&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Inver Grove Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Irving&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Iselin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ithaca&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jackson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jacksonville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jamestown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Janesville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jeffersonville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Joliet&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jonesboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Joplin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Jupiter&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kalamazoo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kankakee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kansas City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kearney&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kearns&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Keller&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kendall&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kennesaw&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kenosha&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kent&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kettering&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Killeen&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;King of Prussia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kingman&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kingsport&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kirkland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kirkwood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kissimmee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Knoxville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Kokomo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;La Grange&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;La Mesa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;La Vista&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lacey&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Laconia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lafayette&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Laguna Hills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Laguna Niguel&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lake Charles&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lake In The Hills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lake Jackson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lake Oswego&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lake Worth&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lakeland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lakewood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lancaster&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Land O Lakes&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lansing&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Laredo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Las Cruces&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Las Vegas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Laurel&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lawton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Layton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Leander&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Leavenworth&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Leawood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lehi&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lehigh Acres&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lemon Grove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Levittown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lewiston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Liberal&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lima&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lincoln&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Linden&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lindenhurst&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lindenwold&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lino Lakes&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Little Rock&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Littleton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Livonia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lodi&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lombard&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Londonderry&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Longview&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lorain&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Altos&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Angeles&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Banos&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Gatos&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Louisville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Loveland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lubbock&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lufkin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lunenburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lynnwood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Macon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Madison&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Madison Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Manchester&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mandan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Manhattan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Manitowoc&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mankato&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mansfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Manteca&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Maple Grove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Maplewood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Marietta&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Marion&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Marshalltown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Martinez&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Maryville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mason City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Massillon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mauldin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mcminnville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mechanicsville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Medford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Medina&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mehlville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Melbourne&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Melrose Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Menlo Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Meridian&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Merrimack&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Merritt Island&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mesa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Metairie&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Miami&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Middle River&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Midland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Midwest City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Millville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Milwaukee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Minnetonka Mills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mint Hill&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mission Viejo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Missoula&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mobile&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Moline&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Montclair&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Montebello&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Moore&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Moreno Valley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Morgantown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Morristown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Moscow&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mount Lebanon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mount Pleasant&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mount Prospect&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mount Vernon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mountain View&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Muncie&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mundelein&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Munster&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Murfreesboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Murray&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Muscatine&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Muskego&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Mustang&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Myrtle Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Napa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Naperville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Nashua&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Nashville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Natick&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Naugatuck&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Neenah&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Berlin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Bern&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Britain&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Iberia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New London&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Milford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Orleans&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New Smyrna Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Newark&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Newington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Newnan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Newport News&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Newton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Niagara Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Norfolk&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Norman&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Las Vegas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Little Rock&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Miami&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Miami Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Olmsted&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Plainfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Platte&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Port&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Ridgeville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;North Royalton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Northbrook&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Northport&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Norwich&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Norwood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oak Creek&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oak Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oakdale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oakland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oakland Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oakton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oakville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oceanside&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Odenton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Odessa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Old Bridge&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Olive Branch&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Omaha&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Opelika&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Orland Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Orlando&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ormond Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oro Valley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ossining&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oswego&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ottumwa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Overland Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Owatonna&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Owensboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oxford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Oxnard&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ozark&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Paducah&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pahrump&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Palm Beach Gardens&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Palm Coast&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Panama City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Papillion&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Paragould&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Paris&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Parkersburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Parkland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Parma&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pasadena&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pasco&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pawtucket&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Peachtree City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pearl&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pekin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pembroke Pines&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pensacola&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Peoria&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Petaluma&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Petersburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pflugerville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pharr&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Phenix City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Philadelphia&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pikesville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pine Bluff&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pittsburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pittsburgh&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Plainview&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pleasant Grove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pleasure Ridge Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Plum&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pomona&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ponte Vedra Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pontiac&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Charlotte&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Huron&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Orange&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Saint Lucie&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Portage&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Portland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Portsmouth&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Post Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Potomac&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pottstown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Prescott&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Prescott Valley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Prior Lake&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Providence&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Provo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pueblo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pueblo West&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Pullman&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Puyallup&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Quincy&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Racine&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Raleigh&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rancho Cucamonga&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Randallstown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rapid City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Raytown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Redding&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Redlands&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Redmond&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Redondo Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Redwood City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Reisterstown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Reno&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Reston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rexburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Reynoldsburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Richfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Richland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Richmond&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ridgewood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Riverside&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Riverview&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rochester&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rochester Hills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rock Hill&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rock Island&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rock Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rocky Mount&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rogers&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rome&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Romeoville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rose Hill&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Roselle&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Roseville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Roswell&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rotterdam&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Round Rock&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Roy&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Royal Palm Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rutland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saco&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sacramento&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saginaw&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Charles&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Louis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Paul&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Peters&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Petersburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Salem&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Salinas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Salisbury&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Salt Lake City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Antonio&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Carlos&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Clemente&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Diego&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Francisco&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Gabriel&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;San Juan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sandusky&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sandwich&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sandy Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sanford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Clara&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Cruz&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Fe&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Maria&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Rosa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Saratoga&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sault Sainte Marie&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Savannah&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Schererville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Scottsdale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Searcy&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Seatac&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Seattle&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Seguin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Seminole&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Seymour&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Shaker Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Shakopee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sharon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Shawnee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sheboygan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sherman&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sherwood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Shirley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Shoreview&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Shreveport&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sioux City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sioux Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Slidell&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Smithtown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Smyrna&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;South Bend&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;South Burlington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;South Hadley&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;South Lake Tahoe&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;South Orange&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;South Portland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;South Vineland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Southgate&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Spanaway&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Spanish Fork&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Spartanburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Spokane&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Spring Hill&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Springfield&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Springville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Stamford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;State College&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Statesboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sterling Heights&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Steubenville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Stevens Point&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Stockton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Stoneham&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Stow&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Stratford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Strongsville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sudbury&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sulphur Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Summerville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Summit&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sunnyvale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Sunrise&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Superior&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Surprise&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Syracuse&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tacoma&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tallahassee&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tamarac&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tampa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Taylors&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Temecula&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Terre Haute&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Terrytown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tewksbury&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Texarkana&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;The Colony&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Thornton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Thousand Oaks&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Titusville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Toledo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tonawanda&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tooele&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Torrance&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Townsend&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Trenton&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Troutdale&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Troy&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tualatin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tucker&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tucson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tulsa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tupelo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tuscaloosa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Twentynine Palms&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Twin Falls&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Tysons Corner&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Union City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;University City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Upper Arlington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Urbana&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Utica&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vacaville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vallejo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Valparaiso&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Van Buren&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vancouver&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vernon Hills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vestavia Hills&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vincennes&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Virginia Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waco&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waldorf&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Walla Walla&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Warren&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Watauga&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waterbury&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Watertown&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waterville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waukesha&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wauwatosa&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Waynesboro&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Weatherford&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Webster&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Webster Groves&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Weslaco&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Allis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Bend&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Des Moines&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Hollywood&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Islip&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Jordan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Lafayette&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Linn&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Memphis&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Mifflin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Palm Beach&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Scarborough&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;West Valley City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Westerville&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Westlake&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Westland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wheat Ridge&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wheeling&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Whitehall&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Whittier&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wichita&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wilkinsburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Willoughby&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Willow Grove&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wilmette&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wilmington&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wilson&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Winchester&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Winter Garden&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Winter Haven&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Winter Park&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Winter Springs&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Winthrop&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Woburn&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Woodburn&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Woodland&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Woodmere&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Woodridge&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Woodstock&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Wooster&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Worcester&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Yarmouth&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;York&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Yuba City&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Yucaipa&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' included-values='in-range-or-null'>
            <min>2.2250738585072014e-308</min>
          </filter>
          <slices>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[none:City:nk]</column>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]</column>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Country,State or Province)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' palette='blue_teal_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' field-type='quantitative' max='37421.960191999984' max-size='1' min='-19427.914840000001' min-size='0.0109835' type='rangesize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0wqssak01i63de1707otp1j0ddmo].[none:State or Province:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0wqssak01i63de1707otp1j0ddmo].[none:State or Province:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0wqssak01i63de1707otp1j0ddmo].[none:State or Province:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' />
              <color column='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' />
              <text column='[federated.0wqssak01i63de1707otp1j0ddmo].[none:State or Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{31D8BF99-8039-4C84-847C-8C712A83E670}' />
    </worksheet>
    <worksheet name='Profit By State2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Profit By States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (SuperStoreUS-2015)' name='federated.0wqssak01i63de1707otp1j0ddmo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wqssak01i63de1707otp1j0ddmo'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Product Category,Product Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_9DDCD0C54A1D47AA8EA4C021BF0D92D5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Category]' />
              <groupfilter function='level-members' level='[Product Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[Action (State or Province)]'>
            <groupfilter function='level-members' level='[State or Province]' user:ui-action-filter='[Action1_5CECC2A058684AF2BD9B4094B8AB88FB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[Action (State or Province)]</column>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Region:nk]</column>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[yr:Order Date:ok]</column>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Product Category,Product Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wqssak01i63de1707otp1j0ddmo].[Longitude (generated)]' field-type='quantitative' max='-6909997.0145498514' min='-15662642.704509715' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wqssak01i63de1707otp1j0ddmo].[Latitude (generated)]' field-type='quantitative' max='7738336.2307074573' min='2232333.5450473735' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0wqssak01i63de1707otp1j0ddmo].[none:State or Province:nk]' />
              <color column='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' />
              <lod column='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Country:nk]' />
              <geometry column='[federated.0wqssak01i63de1707otp1j0ddmo].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wqssak01i63de1707otp1j0ddmo].[Latitude (generated)]</rows>
        <cols>[federated.0wqssak01i63de1707otp1j0ddmo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7738F4C2-2C96-45BC-9B95-E1213D27ECFE}' />
    </worksheet>
    <worksheet name='Sales By Category and Subcategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Sales By Category and Subcategory</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (SuperStoreUS-2015)' name='federated.0wqssak01i63de1707otp1j0ddmo' />
          </datasources>
          <datasource-dependencies datasource='federated.0wqssak01i63de1707otp1j0ddmo'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Country,State or Province)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A833DEFF40A843EC92A18705570B3B10]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State or Province]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wqssak01i63de1707otp1j0ddmo].[Action (State or Province)]'>
            <groupfilter function='level-members' level='[State or Province]' user:ui-action-filter='[Action1_5CECC2A058684AF2BD9B4094B8AB88FB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[Action (State or Province)]</column>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[Action (Country,State or Province)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#5395ff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Sales:qk]</rows>
        <cols>([federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk] / [federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{1D78A20D-DC01-4012-AC0C-A43D81E1E75C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (SuperStoreUS-2015)' name='federated.0wqssak01i63de1707otp1j0ddmo' />
          </datasources>
          <datasource-dependencies datasource='federated.0wqssak01i63de1707otp1j0ddmo'>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Sales:qk]</rows>
        <cols>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Customer Segment:nk]</cols>
      </table>
      <simple-id uuid='{B61C5F33-FDCB-41F7-B825-05F0A3E8EC54}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (SuperStoreUS-2015)' name='federated.0wqssak01i63de1707otp1j0ddmo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wqssak01i63de1707otp1j0ddmo'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Sales:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Region:nk]' />
              <wedge-size column='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Sales:qk]' />
              <size column='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BE01C268-023B-4CAD-B942-FEF3B0B973F4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Final Dashboard Sample_Superstore'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders (SuperStoreUS-2015)' name='federated.0wqssak01i63de1707otp1j0ddmo' />
      </datasources>
      <datasource-dependencies datasource='federated.0wqssak01i63de1707otp1j0ddmo'>
        <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='17' param='vert' type-v2='layout-flow' w='99062' x='469' y='999'>
            <zone h='98002' id='15' type-v2='layout-basic' w='99062' x='469' y='999' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='42197' id='3' name='Sales By Category and Subcategory' w='54657' x='879' y='10612' />
        <zone h='43820' id='4' name='Profit By Category and Subcategory' w='45811' x='703' y='55181' />
        <zone h='8115' id='5' name='Profit By Category and Subcategory' pane-specification-id='0' param='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' type-v2='color' w='12419' x='87170' y='38202' />
        <zone h='36579' id='6' name='Profit By State2' w='22554' x='60750' y='9363' />
        <zone h='8864' id='7' mode='dropdown' name='Profit By State2' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Region:nk]' type-v2='filter' values='database' w='12419' x='86995' y='28464' />
        <zone h='16729' id='8' mode='radiolist' name='Profit By Category and Subcategory' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]' type-v2='filter' values='database' w='11248' x='87112' y='1248' />
        <zone h='8365' id='9' mode='dropdown' name='Profit By Category and Subcategory' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Sub-Category:nk]' type-v2='filter' values='database' w='11482' x='87053' y='18727' />
        <zone h='40200' id='10' name='Profit By Product Container' w='45167' x='49033' y='57054' />
        <zone h='5618' id='11' leg-item-layout='horz' name='Profit By Product Container' pane-specification-id='0' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Container:nk]' type-v2='color' w='19039' x='80609' y='48190' />
        <zone forceUpdate='true' h='5618' id='18' type-v2='text' w='75747' x='11424' y='1998'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#097cc3' fontname='Times New Roman' fontsize='20'>Profit Dashboard</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='19' param='vert' type-v2='layout-flow' w='99062' x='469' y='999'>
                <zone forceUpdate='true' h='5618' id='18' type-v2='text' w='75747' x='11424' y='1998'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#097cc3' fontname='Times New Roman' fontsize='20'>Profit Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8864' id='7' mode='dropdown' name='Profit By State2' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Region:nk]' type-v2='filter' values='database' w='12419' x='86995' y='28464'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36579' id='6' is-fixed='true' name='Profit By State2' w='22554' x='60750' y='9363'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42197' id='3' is-fixed='true' name='Sales By Category and Subcategory' w='54657' x='879' y='10612'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16729' id='8' mode='dropdown' name='Profit By Category and Subcategory' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]' type-v2='filter' values='database' w='11248' x='87112' y='1248'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8365' id='9' mode='dropdown' name='Profit By Category and Subcategory' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Sub-Category:nk]' type-v2='filter' values='database' w='11482' x='87053' y='18727'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43820' id='4' is-fixed='true' name='Profit By Category and Subcategory' w='45811' x='703' y='55181'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8115' id='5' name='Profit By Category and Subcategory' pane-specification-id='0' param='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' type-v2='color' w='12419' x='87170' y='38202'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40200' id='10' is-fixed='true' name='Profit By Product Container' w='45167' x='49033' y='57054'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5618' id='11' leg-item-layout='horz' name='Profit By Product Container' pane-specification-id='0' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Container:nk]' type-v2='color' w='19039' x='80609' y='48190'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A378DAD5-3D9D-4D81-904F-DC63E69731EC}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Final dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders (SuperStoreUS-2015)' name='federated.0wqssak01i63de1707otp1j0ddmo' />
      </datasources>
      <datasource-dependencies datasource='federated.0wqssak01i63de1707otp1j0ddmo'>
        <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
        <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='15' param='horz' type-v2='layout-flow' w='99062' x='469' y='999'>
            <zone h='98002' id='13' param='horz' type-v2='layout-flow' w='61335' x='469' y='999'>
              <zone h='98002' id='8' param='horz' type-v2='layout-flow' w='61335' x='469' y='999'>
                <zone h='98002' id='6' type-v2='layout-basic' w='61335' x='469' y='999'>
                  <zone h='45068' id='3' name='Sales By Category and Subcategory' w='61335' x='469' y='999'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='52934' id='10' name='Profit By Category and Subcategory' w='61335' x='469' y='46067'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='644' h='98002' id='14' is-fixed='true' param='vert' type-v2='layout-flow' w='37727' x='61804' y='999'>
              <zone h='15980' id='16' name='Profit By Category and Subcategory' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]' type-v2='filter' values='database' w='37727' x='61804' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='47940' id='11' name='Profit By State2' w='26655' x='62273' y='51685' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='19' param='vert' type-v2='layout-flow' w='99062' x='469' y='999'>
                <zone fixed-size='280' h='45068' id='3' is-fixed='true' name='Sales By Category and Subcategory' w='61335' x='469' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15980' id='16' mode='checkdropdown' name='Profit By Category and Subcategory' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]' type-v2='filter' values='database' w='37727' x='61804' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52934' id='10' is-fixed='true' name='Profit By Category and Subcategory' w='61335' x='469' y='46067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47940' id='11' is-fixed='true' name='Profit By State2' w='26655' x='62273' y='51685'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0D78E208-75B9-4AD9-B2A5-E4CEC3D759FB}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Sales By Category and Subcategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B64E900-7A94-461B-A8E1-26E3A0C77EF9}' />
    </window>
    <window class='worksheet' name='Profit By State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Country:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Sub-Category:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Sales:qk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:State or Province:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40321A72-E11B-4BAB-9BA7-46BCE649C541}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Customer Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4F6527F-E725-49A2-B736-7FE53638BEB7}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Sales:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:City:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Country:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56B3CFB7-0EE4-43DB-B408-4D6A8F6A8DF3}' />
    </window>
    <window class='worksheet' name='Profit By Category and Subcategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7A6FFA4-7B48-4689-9FC9-8E6D068FFBA5}' />
    </window>
    <window class='worksheet' name='Profit By State2'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wqssak01i63de1707otp1j0ddmo].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[mn:Order Date:ok]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Country:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Order Date:qk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Region:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:State or Province:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[wk:Order Date:ok]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12000766-D9AA-489C-9589-1260C3CB0FE1}' />
    </window>
    <window class='worksheet' name='Profit By Product Container'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Container:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:City:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Country:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Customer Name:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Category:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Product Container:nk]</field>
            <field>[federated.0wqssak01i63de1707otp1j0ddmo].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36522611-CE9C-48D1-8506-D2697B6EA5DA}' />
    </window>
    <window class='dashboard' name='Final dashboard' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Profit By Category and Subcategory' />
        <viewpoint name='Profit By State2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales By Category and Subcategory'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{24CD236A-48A3-4413-AA77-4BE863EA3C23}' />
    </window>
    <window class='dashboard' maximized='true' name='Final Dashboard Sample_Superstore'>
      <viewpoints>
        <viewpoint name='Profit By Category and Subcategory' />
        <viewpoint name='Profit By Product Container'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit By State2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales By Category and Subcategory'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{678F59B4-6C66-439B-B5DD-4363F1AE75E8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Final Dashboard Sample_Superstore' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Final dashboard' width='192'>
      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
      L/wVMxU7ewf9TM0s8Fuf+z1+/PxTfOQTv8LHH34XT798lHvuvINHfv7TRL0KpUqN++9/F29/
      9wfODH6AhemTHD56Epfbw9ve/k6e+9HjvPjKIe66bddqW40mrjN59AWq1YqsWHnz1Ve48753
      svu2u3n0g+/m29/6LoNDQywffZVXXnkJx/CdPPapnyEZT/ODb3+ff/3Yb/DxD97HD555meTC
      DPd/5DM88jMPM/3mC7z03LPces+9q00oClaLglZKcnRihbpp4eOf+CR2uU78xI+xj97DY7/8
      KdynHDot7j5+799+mhce/yb/9Uv/jFav0mjq6FqdWkNDkux89BOf4t5xDweee4a8bZjf+PVf
      ZyTqxmpzoFotvPLyq9z/rndw17vey4N37+M7TzzL8NAQrzzzJC8+/wT3vv/nePSn7yWRK/Pd
      Jw/w2d/8H7hn1M1rx+aZmZriM7/5P/LhD76HF558nOcPvM49d+zr6PfsCkCHOL1RfvnXf4Pf
      +uxjOFWZ4R17CftcxPoivHXwMAcPHqFvjaT+NqeTdHyJfPHsWbdD47u57757mZs4hi0wiN9M
      ENechD2rLhs/8eA7+Po/fY2F+VkWlhd5/MlXefeDD+B12sBqRytkSaRzRCMhVIeHn3zf++mL
      hFianWRqapqWaTIUC/PmG4d589BRBmMDOAJRbhmPIclW7tsd4Z9fnueunavnA7z85LeJ7r6P
      veODiDNn1khISLgDQZamJ5ieOEn91HK/lo9zYqnAu37iQXLJJSyKQnxpnhOTMwAIdJYXFjgy
      ucz47l1kF04yPz/H0tRh3pircP877sEqC2xON5n4EvlSlR6/D08gxAc+8NOEgkEmjh9lamb1
      EL9er52DxyY5Nr1EXyRA7/AuYmEfdm8vUSXHbN1Bv7+zpAnKH/zBH/xBRzVucrx+P729vatv
      DknB5/cTCfcQG99NNTWPJTjKg/feitvjJRyJ4nI6CAaDjIzvRq5naSlOwkEfqtVBOr5AOlvg
      w488it/toJqap2//A4z1rbpEBKKDxAJWjpycZWh0N7tGQqSKLe68/RZ6B4aJ9dhZydX4wAfe
      R3JpDqsvwr59t+C1tEimU6RKgk988uMUV6axR3fywF178fn8hCMRQOCytMiJAPfeuhOAwbGd
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit By Category and Subcategory' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit By Product Container' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Profit By State' width='192'>
      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
      iI2x478HYGClbx9dG4gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit By State2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales By Category and Subcategory' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      bUpj+gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='Sheet 4' width='164'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
